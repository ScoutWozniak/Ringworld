@inherits Sandbox.UI.Panel
@using Sandbox
@using System
@namespace MyGame

<style>
	GameState {
		position: absolute;
		left: 5%;
		top: 5%;
		width: 20%;
		height: 20%;
		display: flex;
		flex-direction: column;
		padding: 5px;
		margin-bottom: 5px;
		transform: rotate(-2deg);
		text-shadow: 5px 5px black;
	}

	.game-info {
		white-space: 100px;
		top: 0%;
		width:100%;
		height:5%;
		font-size:50px;
		color:white;
	}

	.game-timer {
		font-weight: bold;
	}

	.kills-info {
		top:20%;
		width: 75%;
		height: 100%;
		font-size: 40px;
		color: white;
		opacity: .9;
	}

	.kills {
		font-weight: bold;
		width: 25%;
	}

	.kill-bar {
		background-color: dodgerblue;
		opacity: 5;
		left: 0%;
		width: 95%;
		height: 100%;

	}

	.kill-bar-bg {
		background-color: blue;
		opacity: 1;
		left: 5%;
		width: 100%;
		height: 22%;
		box-shadow: 5px 5px black;
		border: 5px solid black;
		margin-left: 10px;
	}

</style>

<root class="GameState">
	<div class="game-info">
		<div class="game-timer">@(GetGameTime())</div>
		<div class="game-timer">&nbsp;| Slayer</div>
	</div>
	<div class="kills-info">
		<div class="kills">@(GetPlayerKills())</div>
		<div class="kill-bar-bg">
			<div class="kill-bar" style="width: @(KillBarPercentage())%"></div>
		</div>
	</div>
</root>

@code {
	public string GetGameTime()
	{
		var game = GameManager.Current as MyGame;
		if (!game.IsValid()) return "";
		var span = TimeSpan.FromSeconds((game.StateTimer * 60).Clamp(0, float.MaxValue));
		return span.ToString(@"hh\:mm");
	}

	public float KillBarPercentage()
	{
		return ((float)GetPlayerKills() / 25) * 100.0f;
	}

	public int GetPlayerKills()
	{
		IClient player = Game.LocalClient;
		if (!player.IsValid()) return 0;
		return player.GetInt("kills");
	}

	protected override int BuildHash()
	{
		return HashCode.Combine(GetGameTime().GetHashCode(), GetPlayerKills().GetHashCode());
	}
}
